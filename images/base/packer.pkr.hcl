
variable "image_mount_path" {
  type    = string
  default = "/mnt/packer-chroot/base"
}

source "arm" "autogenerated_1" {
  file_checksum         = "5d0661eef1a0b89358159f3849c8f291be2305e5fe85b7a16811719e6e8ad5d1"
  file_checksum_type    = "sha256"
  file_target_extension = "xz"
  file_unarchive_cmd    = ["xz", "-d", "$ARCHIVE_PATH"]
  file_urls             = ["http://mirrors.rit.edu/ubuntu-cdimage/releases/22.04/release/ubuntu-22.04.1-preinstalled-server-arm64+raspi.img.xz"]
  image_build_method    = "resize"
  image_chroot_env      = ["PATH=/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/bin:/sbin"]
  image_mount_path      = "${var.image_mount_path}"
  image_partitions {
    filesystem   = "vfat"
    mountpoint   = "/boot/firmware"
    name         = "boot"
    size         = "256M"
    start_sector = "2048"
    type         = "c"
  }
  image_partitions {
    filesystem   = "ext4"
    mountpoint   = "/"
    name         = "root"
    size         = "0"
    start_sector = "526336"
    type         = "83"
  }
  image_path                   = "base.tar.gz"
  image_size                   = "4.5G"
  image_type                   = "dos"
  qemu_binary_destination_path = "/usr/bin/qemu-arm-static"
  qemu_binary_source_path      = "/usr/bin/qemu-arm-static"
}

build {
  sources = ["source.arm.autogenerated_1"]

  provisioner "shell" {
    inline = [
      "df -h", 
      "ls -la /boot/firmware", 
      "mkdir -p /tmp/boot", 
      "cp -vr /boot/firmware /tmp/boot/", 
      "umount /boot/firmware", 
      "df -h", 
      "rm -rf /boot/firmware/*", 
      "mv -v /tmp/boot/firmware /boot/", 
      "ls -la /boot/firmware", 
      "rm -rf /tmp/boot"
    ]
  }

  provisioner "ansible" {
    ansible_env_vars = ["ANSIBLE_RETRY_FILES_ENABLED=0"]
    extra_arguments  = ["-v", "--connection=chroot", "--diff"]
    inventory_file   = "./base/ansible/hosts"
    playbook_file    = "./base/ansible/site.yml"
  }

}
