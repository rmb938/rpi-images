---
- hosts: all
  name: OPENSTACK NODE
  tasks:
    - name: COPY NETWORK FILES
      copy:
        src: ".{{ item.dest }}"
        dest: "{{ item.dest }}"
        owner: root
        group: root
        mode: "{{ item.mode }}"
      with_items:
        - { dest: '/etc/systemd/network/veth0.netdev', mode: "0644" }
        - { dest: '/etc/systemd/network/veth1.netdev', mode: "0644" }

    - name: INSTALL PACKAGE REQUIREMENTS
      apt:
        name:
          - btrfs-progs
          - libseccomp2
          - util-linux
          - socat
          - conntrack
          - nfs-common
        state: present

    - name: INSTALL LEGACY TABLES
      apt:
        name:
          - iptables
          - arptables
          - ebtables
        state: present

    - name: UPDATE ALTERNATIVES TO LEGACY TABLES
      alternatives:
        name: "{{ item.name }}"
        path: "{{ item.path }}"
      with_items:
        - { name: "iptables", path: "/usr/sbin/iptables-legacy" }
        - { name: "ip6tables", path: "/usr/sbin/ip6tables-legacy" }
        - { name: "arptables", path: "/usr/sbin/arptables-legacy" }
        - { name: "ebtables", path: "/usr/sbin/ebtables-legacy" }

    - name: LOAD KERNEL MODULES
      copy:
        dest: /etc/modules-load.d/cri.conf
        content: |-
          ### This file is managed by Ansible
          ip_vs
          ip_vs_rr
          ip_vs_wrr
          ip_vs_sh
          nf_conntrack
          overlay
          br_netfilter

    - name: CONFIGURE SYSCTL BASE SETTINGS
      sysctl:
        name: "{{ item.name }}"
        value: "{{ item.value }}"
        reload: no
      with_items:
        - { name: "net.bridge.bridge-nf-call-iptables", value: 1 }
        - { name: "net.bridge.bridge-nf-call-ip6tables", value: 1 }
        - { name: "net.ipv4.ip_forward", value: 1 }
        - { name: "net.ipv6.conf.all.forwarding", value: 1 }

    # https://kubedex.com/90-days-of-aws-eks-in-production/
    # https://sven.stormbind.net/blog/posts/docker_from_30_to_230/
    - name: CONFIGURE SYSCTL OPTIMZATION SETTINGS
      sysctl:
        name: "{{ item.name }}"
        value: "{{ item.value }}"
        reload: no
      with_items:
        - { name: "fs.inotify.max_user_instances", value: 4096 }
        - { name: "fs.inotify.max_user_watches", value: 32768 }
        - { name: "kernel.pid_max", value: 500000 } # - raspbian is 32bit so we only can use the default of 32768
        - { name: "net.ipv4.ip_local_port_range", value: "1024 64999" } # use even and odd numbers to prevent "ip_local_port_range: prefer different parity for start/end values"
        - { name: "net.ipv4.tcp_tw_reuse", value: 1 }
        - { name: "net.ipv4.tcp_fin_timeout", value: 15 }
        - { name: "net.core.somaxconn", value: 4096 }
        - { name: "net.core.netdev_max_backlog", value: 4096 }
        - { name: "net.core.rmem_max", value: 16777216 }
        - { name: "net.core.wmem_max", value: 16777216 }
        - { name: "net.ipv4.tcp_max_syn_backlog", value: 20480 }
        - { name: "net.ipv4.tcp_max_tw_buckets", value: 400000 }
        - { name: "net.ipv4.tcp_no_metrics_save", value: 1 }
        - { name: "net.ipv4.tcp_rmem", value: "4096 87380 16777216" }
        - { name: "net.ipv4.tcp_syn_retries", value: 2 }
        - { name: "net.ipv4.tcp_synack_retries", value: 2 }
        - { name: "net.ipv4.tcp_wmem", value: "4096 65536 16777216" }
        - { name: "net.netfilter.nf_conntrack_max", value: 262144 }
        - { name: "net.netfilter.nf_conntrack_generic_timeout", value: 120 }
        - { name: "net.netfilter.nf_conntrack_tcp_timeout_established", value: 86400 }
        - { name: "net.ipv4.neigh.default.gc_thresh1", value: 8096 }
        - { name: "net.ipv4.neigh.default.gc_thresh2", value: 12288 }
        - { name: "net.ipv4.neigh.default.gc_thresh3", value: 16384 }
        - { name: "net.ipv6.neigh.default.gc_thresh1", value: 8096 }
        - { name: "net.ipv6.neigh.default.gc_thresh2", value: 12288 }
        - { name: "net.ipv6.neigh.default.gc_thresh3", value: 16384 }

    # Machine IDs are used for random generation seeds
    # so we need to wipe them so each pi can be unqiue
    # See https://github.com/DanHam/packer-virt-sysprep/blob/master/sysprep-op-machine-id.sh
    # This needs to happen last for some reason
    - name: REMOVE ETC MACHINE ID
      file:
        path: /etc/machine-id
        state: absent

    - name: PLACE ETC MACHINE ID
      file:
        path: /etc/machine-id
        owner: root
        group: root
        mode: "0444"
        state: touch

    # Also do the dbus one
    - name: REMOVE DBUS MACHINE ID
      file:
        path: /var/lib/dbus/machine-id
        state: absent
